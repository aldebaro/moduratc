%% Convert files generated by Systemvue to ModuRatC format.

%It is assumed that the original files had sampling frequency
%of 20 MHz. For the simulations, Fs_bb=20 MHz will be used. So,
%the code below will not adopt upsampling factor.

%The values below are being used only in the name of the output files!
%They are not used in calculations. The bandwidths are defined for each
%Scenario
bandwidths=[200 3000 5000]*1e3; %sequence in this case: GSM LTE and CDMA
outputPath=ff.myBasebandCenvTimeDomainDir; %output directory for files

ratID{1}='gsm';
ratID{2}='lte';
ratID{3}='wcdma';
fileName{1}='gsm_200k_cx_bb';
fileName{2}='lte_3M_cx_bb';
fileName{3}='wcdma_5M_cx_bb';
for rat=1:3 %process all signals
    load(['externalFiles' filesep fileName{rat} '.mat']);
    fileCounter=1;
    eval(['x=' fileName{rat} ';']);
    %x=resample(x,L,1);
    numOfOutputFiles=floor(length(x)/dsp.minNumSamplesBBSignals);
    for j=1:numOfOutputFiles
        %pwelch(x); pause
        %outputFileName=[outputPath ratID{rat} 'Fs' num2str(dsp.Fs_bb/1e3) ...
        %    'kHzBw' num2str(bandwidths(rat)/1e3) 'kHz_' num2str(fileCounter) '.' ff.basebandEnvelopesFileExtension];
        outputFileName=[outputPath ratID{rat} '_' num2str(fileCounter) '.' ff.basebandEnvelopesFileExtension];
        startSample = (j-1)*dsp.minNumSamplesBBSignals+1;
        endSample = startSample + dsp.minNumSamplesBBSignals - 1;
        write_complex_binary(outputFileName, x(startSample:endSample));
        disp(['Wrote ' outputFileName])
        fileCounter = fileCounter+1;
    end    
end
